# Todo App API Usage Guide

## API Documentation

The Todo App provides a RESTful API for managing tasks. The API is documented using OpenAPI and can be accessed through Swagger UI.

### Accessing Swagger UI Documentation

1. Start the application: `flask run`
2. Open your browser and navigate to: http://localhost:5000/swagger-ui

The Swagger UI provides an interactive interface to explore and test all available API endpoints.

## API Endpoints

### Tasks Collection

**GET /api/tasks**
- Retrieves a list of all tasks
- Returns: Array of task objects

**POST /api/tasks**
- Creates a new task
- Request body: JSON object with task properties
  ```json
  {
    "description": "Task description",
    "due_date": "2025-04-10",
    "status": false
  }
  ```
- Returns: Created task object

### Single Task

**GET /api/tasks/{task_id}**
- Retrieves a specific task by ID
- Returns: Task object

**PUT /api/tasks/{task_id}**
- Updates a specific task
- Request body: JSON object with properties to update
  ```json
  {
    "description": "Updated description",
    "due_date": "2025-04-15",
    "status": true
  }
  ```
- Returns: Updated task object

**DELETE /api/tasks/{task_id}**
- Deletes a specific task
- Returns: No content (204)

## Example Usage with curl

### Get all tasks
```
curl -X GET http://localhost:5000/api/tasks
```

### Create a new task
```
curl -X POST http://localhost:5000/api/tasks \
  -H "Content-Type: application/json" \
  -d '{"description": "Buy groceries", "due_date": "2025-04-10"}'
```

### Get a specific task
```
curl -X GET http://localhost:5000/api/tasks/1
```

### Update a task
```
curl -X PUT http://localhost:5000/api/tasks/1 \
  -H "Content-Type: application/json" \
  -d '{"status": true}'
```

### Delete a task
```
curl -X DELETE http://localhost:5000/api/tasks/1
```